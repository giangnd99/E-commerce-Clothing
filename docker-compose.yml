version: '3.8'

networks:
  store-network:
    driver: bridge

services:
  db1:
    image: mysql:8.0
    container_name: db1
    hostname: db1
    networks:
      - store-network
    ports:
      - "3307:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: storedb
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  db2:
    image: mysql:8.0
    container_name: db2
    hostname: db2
    networks:
      - store-network
    ports:
      - "3308:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: storedb
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    networks:
      - store-network
    ports:
      - "6379:6379"
    restart: unless-stopped

  store-app:
    image: giangnd919/store:0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: store-app
    depends_on:
      db1:
        condition: service_healthy
      db2:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - store-network
    environment:
      DBMS_USERNAME: root
      DBMS_PASSWORD: root
      DBMS_CONNECTION: jdbc:mysql://db1:3306/storedb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      DBMS_SECONDARY_CONNECTION: jdbc:mysql://db2:3306/storedb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OAUTH2_GOOGLE_REDIRECT_URI: http://localhost:5173/login-success
      PAYMENT_VNPAY_RETURNURL: http://localhost:5173/order/list
    ports:
      - "8080:8080"
    restart: unless-stopped
